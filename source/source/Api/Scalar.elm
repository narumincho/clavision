-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (Codecs, Url(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Url
    = Url String


defineCodecs :
    { codecUrl : Codec valueUrl }
    -> Codecs valueUrl
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueUrl
    -> { codecUrl : Codec valueUrl }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueUrl
    = Codecs (RawCodecs valueUrl)


type alias RawCodecs valueUrl =
    { codecUrl : Codec valueUrl }


defaultCodecs : RawCodecs Url
defaultCodecs =
    { codecUrl =
        { encoder = \(Url raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Url
        }
    }
